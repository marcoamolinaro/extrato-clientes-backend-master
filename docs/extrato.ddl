-- Generated by Oracle SQL Developer Data Modeler 19.2.0.182.1216
--   at:        2020-11-24 16:28:01 BRT
--   site:      Oracle Database 12cR2
--   type:      Oracle Database 12cR2



CREATE TABLESPACE tbs16k01d 
--  WARNING: Tablespace has no data files defined 
 LOGGING ONLINE EXTENT MANAGEMENT LOCAL AUTOALLOCATE FLASHBACK ON;

CREATE TABLESPACE tbs16k01i 
--  WARNING: Tablespace has no data files defined 
 LOGGING ONLINE EXTENT MANAGEMENT LOCAL AUTOALLOCATE FLASHBACK ON;

CREATE user extrato identified by account unlock 
;

CREATE TABLE extrato.aut_ext_tbcl_ext_alt (
    aut_cd_sequencial            NUMBER NOT NULL,
    aut_ds_tipo_operacao         VARCHAR2(6 BYTE),
    aut_status                   VARCHAR2(9 BYTE),
    aut_cd_usuario_solicitacao   VARCHAR2(15 BYTE),
    aut_dt_solicitacao           DATE,
    aut_cd_usuario_autorizacao   VARCHAR2(15 BYTE),
    aut_dt_autorizacao           DATE,
    dt_juliana_oper              NUMBER(7),
    cd_sis_orig                  VARCHAR2(4 BYTE),
    cd_oper                      VARCHAR2(30 BYTE),
    vl_contabil_ext              NUMBER(16, 4),
    vl_corrigido_me_ext          NUMBER(16, 4),
    quantidade_ext               NUMBER(20, 8),
    cd_seq_ext_alt               NUMBER(4),
    aut_dt_oper_aux              DATE,
    tmp_dt_oper_aux              DATE
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.aut_ext_tbcl_ext_alt_pkv1 ON
    extrato.aut_ext_tbcl_ext_alt (
        aut_cd_sequencial
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.aut_ext_tbcl_ext_alt ADD CONSTRAINT aut_ext_tbcl_ext_alt_pkv1 PRIMARY KEY ( aut_cd_sequencial );

CREATE TABLE extrato.aut_ext_tbcl_ext_alt (
    aut_cd_sequencial            NUMBER NOT NULL,
    aut_ds_tipo_operacao         VARCHAR2(6 BYTE),
    aut_status                   VARCHAR2(9 BYTE),
    aut_cd_usuario_solicitacao   VARCHAR2(15 BYTE),
    aut_dt_solicitacao           DATE,
    aut_cd_usuario_autorizacao   VARCHAR2(15 BYTE),
    aut_dt_autorizacao           DATE,
    dt_juliana_oper              NUMBER(7),
    cd_sis_orig                  VARCHAR2(4 BYTE),
    cd_oper                      VARCHAR2(30 BYTE),
    vl_contabil_ext              NUMBER(16, 4),
    vl_corrigido_me_ext          NUMBER(16, 4),
    quantidade_ext               NUMBER(20, 8),
    cd_seq_ext_alt               NUMBER(4),
    aut_dt_oper_aux              DATE,
    tmp_dt_oper_aux              DATE
)
LOGGING;

CREATE UNIQUE INDEX extrato.aut_ext_tbcl_ext_alt_pk ON
    extrato.aut_ext_tbcl_ext_alt (
        aut_cd_sequencial
    ASC )
        LOGGING;

ALTER TABLE extrato.aut_ext_tbcl_ext_alt ADD CONSTRAINT aut_ext_tbcl_ext_alt_pk PRIMARY KEY ( aut_cd_sequencial );

CREATE TABLE extrato.aut_ext_tbcl_ext_exc (
    aut_cd_sequencial            NUMBER NOT NULL,
    aut_ds_tipo_operacao         VARCHAR2(6 BYTE),
    aut_status                   VARCHAR2(9 BYTE),
    aut_cd_usuario_solicitacao   VARCHAR2(15 BYTE),
    aut_dt_solicitacao           DATE,
    aut_cd_usuario_autorizacao   VARCHAR2(15 BYTE),
    aut_dt_autorizacao           DATE,
    cd_cli_br                    NUMBER(8),
    ds_obn                       VARCHAR2(50 BYTE),
    cd_moeda_oper                NUMBER(5),
    cd_empresa_fin               NUMBER(6),
    cd_oper                      VARCHAR2(30 BYTE),
    cd_sis_orig                  VARCHAR2(4 BYTE),
    dt_limite                    DATE,
    dt_limite_ini                DATE,
    cd_seq_ext_exc               NUMBER(5),
    cd_empresa                   NUMBER(6),
    cd_grprod                    NUMBER(3),
    cd_famprod                   NUMBER(2),
    cd_produto                   NUMBER(4),
    cd_modalidade                NUMBER(3),
    ii_tipo_contabil             CHAR(1 BYTE),
    ii_tipo_contraparte          CHAR(1 BYTE),
    cd_garantia                  VARCHAR2(2 BYTE)
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.aut_ext_tbcl_ext_exc_pkv1 ON
    extrato.aut_ext_tbcl_ext_exc (
        aut_cd_sequencial
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.aut_ext_tbcl_ext_exc ADD CONSTRAINT aut_ext_tbcl_ext_exc_pkv1 PRIMARY KEY ( aut_cd_sequencial );

CREATE TABLE extrato.aut_ext_tbcl_ext_exc (
    aut_cd_sequencial            NUMBER NOT NULL,
    aut_ds_tipo_operacao         VARCHAR2(6 BYTE),
    aut_status                   VARCHAR2(9 BYTE),
    aut_cd_usuario_solicitacao   VARCHAR2(15 BYTE),
    aut_dt_solicitacao           DATE,
    aut_cd_usuario_autorizacao   VARCHAR2(15 BYTE),
    aut_dt_autorizacao           DATE,
    cd_cli_br                    NUMBER(8),
    ds_obn                       VARCHAR2(50 BYTE),
    cd_moeda_oper                NUMBER(5),
    cd_empresa_fin               NUMBER(6),
    cd_oper                      VARCHAR2(30 BYTE),
    cd_sis_orig                  VARCHAR2(4 BYTE),
    dt_limite                    DATE,
    dt_limite_ini                DATE,
    cd_seq_ext_exc               NUMBER(5),
    cd_empresa                   NUMBER(6),
    cd_grprod                    NUMBER(3),
    cd_famprod                   NUMBER(2),
    cd_produto                   NUMBER(4),
    cd_modalidade                NUMBER(3),
    ii_tipo_contabil             CHAR(1 BYTE),
    ii_tipo_contraparte          CHAR(1 BYTE),
    cd_garantia                  VARCHAR2(2 BYTE)
)
LOGGING;

CREATE UNIQUE INDEX extrato.aut_ext_tbcl_ext_exc_pk ON
    extrato.aut_ext_tbcl_ext_exc (
        aut_cd_sequencial
    ASC )
        LOGGING;

ALTER TABLE extrato.aut_ext_tbcl_ext_exc ADD CONSTRAINT aut_ext_tbcl_ext_exc_pk PRIMARY KEY ( aut_cd_sequencial );

CREATE TABLE extrato.aut_ext_tex_extrato (
    aut_cd_sequencial            NUMBER NOT NULL,
    aut_ds_tipo_operacao         VARCHAR2(6 BYTE),
    aut_status                   VARCHAR2(9 BYTE),
    aut_cd_usuario_solicitacao   VARCHAR2(15 BYTE),
    aut_dt_solicitacao           DATE,
    aut_cd_usuario_autorizacao   VARCHAR2(15 BYTE),
    aut_dt_autorizacao           DATE,
    old_cd_empresa               NUMBER(6),
    old_cd_cliente               NUMBER(7),
    old_cd_modalidade            NUMBER(3),
    old_cd_oper_origem           VARCHAR2(30 BYTE),
    cd_empresa                   NUMBER(6),
    cd_cliente                   NUMBER(7),
    cd_modalidade                NUMBER(3),
    cd_oper_origem               VARCHAR2(30 BYTE),
    cd_contrato                  VARCHAR2(30 BYTE),
    dt_referencia                DATE,
    dt_inicio_oper               DATE,
    dt_vencimento_oper           DATE,
    dt_liquidacao_oper           DATE,
    cd_grprod                    NUMBER(3),
    cd_famprod                   NUMBER(3),
    cd_produto                   NUMBER(4),
    sg_sistema                   VARCHAR2(2 BYTE),
    sg_modulo                    VARCHAR2(2 BYTE),
    cd_moeda                     NUMBER(5),
    quantidade                   NUMBER(20, 8),
    vl_contabil                  NUMBER(16, 4),
    vl_corrigido_me              NUMBER(16, 4),
    vl_operacao_me               NUMBER(16, 4),
    vl_operacao_mn               NUMBER(16, 4),
    vl_operacao_emp              NUMBER(16, 4),
    vl_juros_me                  NUMBER(16, 4),
    vl_juros_mn                  NUMBER(16, 4),
    ii_tipo_contabil             VARCHAR2(1 BYTE),
    cd_cgccpf                    VARCHAR2(30 BYTE),
    nm_cliente                   VARCHAR2(100 BYTE),
    dc_end1                      VARCHAR2(100 BYTE),
    dc_end2                      VARCHAR2(100 BYTE),
    dc_end3                      VARCHAR2(100 BYTE),
    cd_pais                      NUMBER(5),
    nome_aoscuidados             VARCHAR2(35 BYTE),
    ds_obn                       VARCHAR2(50 BYTE),
    nm_empresa                   VARCHAR2(64 BYTE),
    cd_filial                    NUMBER(2),
    nm_indexador                 VARCHAR2(20 BYTE),
    cd_garantia                  VARCHAR2(2 BYTE)
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.aut_ext_tex_extrato_pkv1 ON
    extrato.aut_ext_tex_extrato (
        aut_cd_sequencial
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.aut_ext_tex_extrato ADD CONSTRAINT aut_ext_tex_extrato_pkv1 PRIMARY KEY ( aut_cd_sequencial );

CREATE TABLE extrato.aut_ext_tex_extrato (
    aut_cd_sequencial            NUMBER NOT NULL,
    aut_ds_tipo_operacao         VARCHAR2(6 BYTE),
    aut_status                   VARCHAR2(9 BYTE),
    aut_cd_usuario_solicitacao   VARCHAR2(15 BYTE),
    aut_dt_solicitacao           DATE,
    aut_cd_usuario_autorizacao   VARCHAR2(15 BYTE),
    aut_dt_autorizacao           DATE,
    old_cd_empresa               NUMBER(6),
    old_cd_cliente               NUMBER(7),
    old_cd_modalidade            NUMBER(3),
    old_cd_oper_origem           VARCHAR2(30 BYTE),
    cd_empresa                   NUMBER(6),
    cd_cliente                   NUMBER(7),
    cd_modalidade                NUMBER(3),
    cd_oper_origem               VARCHAR2(30 BYTE),
    cd_contrato                  VARCHAR2(30 BYTE),
    dt_referencia                DATE,
    dt_inicio_oper               DATE,
    dt_vencimento_oper           DATE,
    dt_liquidacao_oper           DATE,
    cd_grprod                    NUMBER(3),
    cd_famprod                   NUMBER(3),
    cd_produto                   NUMBER(4),
    sg_sistema                   VARCHAR2(2 BYTE),
    sg_modulo                    VARCHAR2(2 BYTE),
    cd_moeda                     NUMBER(5),
    quantidade                   NUMBER(20, 8),
    vl_contabil                  NUMBER(16, 4),
    vl_corrigido_me              NUMBER(16, 4),
    vl_operacao_me               NUMBER(16, 4),
    vl_operacao_mn               NUMBER(16, 4),
    vl_operacao_emp              NUMBER(16, 4),
    vl_juros_me                  NUMBER(16, 4),
    vl_juros_mn                  NUMBER(16, 4),
    ii_tipo_contabil             VARCHAR2(1 BYTE),
    cd_cgccpf                    VARCHAR2(30 BYTE),
    nm_cliente                   VARCHAR2(100 BYTE),
    dc_end1                      VARCHAR2(100 BYTE),
    dc_end2                      VARCHAR2(100 BYTE),
    dc_end3                      VARCHAR2(100 BYTE),
    cd_pais                      NUMBER(5),
    nome_aoscuidados             VARCHAR2(35 BYTE),
    ds_obn                       VARCHAR2(50 BYTE),
    nm_empresa                   VARCHAR2(64 BYTE),
    cd_filial                    NUMBER(2),
    nm_indexador                 VARCHAR2(20 BYTE),
    cd_garantia                  VARCHAR2(2 BYTE)
)
LOGGING;

CREATE UNIQUE INDEX extrato.aut_ext_tex_extrato_pk ON
    extrato.aut_ext_tex_extrato (
        aut_cd_sequencial
    ASC )
        LOGGING;

ALTER TABLE extrato.aut_ext_tex_extrato ADD CONSTRAINT aut_ext_tex_extrato_pk PRIMARY KEY ( aut_cd_sequencial );

CREATE TABLE extrato.client_extract_management (
    cd_cli_br           NUMBER(8) NOT NULL,
    nm_cli              VARCHAR2(60 BYTE),
    vr_agendamento      VARCHAR2(10 BYTE),
    vr_periodo          VARCHAR2(60 BYTE) NOT NULL,
    vr_horario          VARCHAR2(60 BYTE),
    vr_dia_semana       VARCHAR2(60 BYTE),
    dt_ref              VARCHAR2(10 BYTE),
    vr_tipo_relatorio   VARCHAR2(10 BYTE),
    vr_email_flag       VARCHAR2(5 BYTE)
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.pk_cpv1 ON
    extrato.client_extract_management (
        cd_cli_br
    ASC,
        vr_periodo
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.client_extract_management ADD CONSTRAINT pk_cpv1 PRIMARY KEY ( cd_cli_br,
                                                                                   vr_periodo );

CREATE TABLE extrato.client_extract_management (
    cd_cli_br           NUMBER(8) NOT NULL,
    nm_cli              VARCHAR2(60 BYTE),
    vr_agendamento      VARCHAR2(10 BYTE),
    vr_periodo          VARCHAR2(60 BYTE) NOT NULL,
    vr_horario          VARCHAR2(60 BYTE),
    vr_dia_semana       VARCHAR2(60 BYTE),
    dt_ref              VARCHAR2(10 BYTE),
    vr_tipo_relatorio   VARCHAR2(10 BYTE),
    vr_email_flag       VARCHAR2(5 BYTE)
)
LOGGING;

CREATE UNIQUE INDEX extrato.pk_cp ON
    extrato.client_extract_management (
        cd_cli_br
    ASC,
        vr_periodo
    ASC )
        LOGGING;

ALTER TABLE extrato.client_extract_management ADD CONSTRAINT pk_cp PRIMARY KEY ( cd_cli_br,
                                                                                 vr_periodo );

CREATE TABLE extrato.extract_log_report (
    log_id      NUMBER(*, 0) NOT NULL,
    cod_cli     NUMBER(8) NOT NULL,
    nm_cli      VARCHAR2(390 BYTE),
    ag_tipo     VARCHAR2(50 BYTE),
    execucao    VARCHAR2(100 BYTE),
    status      VARCHAR2(60 BYTE),
    descricao   VARCHAR2(400 BYTE),
    filename    VARCHAR2(100 BYTE),
    dt_log      DATE NOT NULL
)
LOGGING;

CREATE UNIQUE INDEX extrato.log_id ON
    extrato.extract_log_report (
        log_id
    ASC )
        LOGGING;

ALTER TABLE extrato.extract_log_report ADD CONSTRAINT log_id PRIMARY KEY ( log_id );

CREATE TABLE extrato.extract_log_report (
    log_id      NUMBER(*, 0) NOT NULL,
    cod_cli     NUMBER(8) NOT NULL,
    nm_cli      VARCHAR2(390 BYTE),
    ag_tipo     VARCHAR2(50 BYTE),
    execucao    VARCHAR2(100 BYTE),
    status      VARCHAR2(60 BYTE),
    descricao   VARCHAR2(400 BYTE),
    filename    VARCHAR2(100 BYTE),
    dt_log      DATE NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.log_idv2 ON
    extrato.extract_log_report (
        log_id
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.extract_log_report ADD CONSTRAINT log_idv2 PRIMARY KEY ( log_id );

CREATE TABLE extrato.extract_log_report (
    log_id      NUMBER(*, 0) NOT NULL,
    cod_cli     NUMBER(8) NOT NULL,
    nm_cli      VARCHAR2(390 BYTE),
    ag_tipo     VARCHAR2(50 BYTE),
    execucao    VARCHAR2(100 BYTE),
    status      VARCHAR2(60 BYTE),
    descricao   VARCHAR2(400 BYTE),
    filename    VARCHAR2(100 BYTE),
    dt_log      DATE NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.log_idv1 ON
    extrato.extract_log_report (
        log_id
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.extract_log_report ADD CONSTRAINT log_idv1 PRIMARY KEY ( log_id );

CREATE TABLE extrato.extrato_montagem_log (
    status_processo VARCHAR2(50 BYTE)
)
LOGGING;

CREATE TABLE extrato.extrato_montagem_log (
    status_processo VARCHAR2(50 BYTE)
)
TABLESPACE tbs16k01d LOGGING NO INMEMORY;

CREATE TABLE extrato.qrtz_blob_triggers (
    trigger_name    VARCHAR2(200 BYTE) NOT NULL,
    trigger_group   VARCHAR2(200 BYTE) NOT NULL,
    blob_data       BLOB
)
TABLESPACE users LOGGING NO INMEMORY
    LOB ( blob_data ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

ALTER TABLE extrato.qrtz_blob_triggers
    ADD CONSTRAINT qrtz_blob_triggers_pk PRIMARY KEY ( trigger_name,
                                                       trigger_group )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_calendars (
    calendar_name   VARCHAR2(200 BYTE) NOT NULL,
    calendar        BLOB NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY
    LOB ( calendar ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

ALTER TABLE extrato.qrtz_calendars
    ADD CONSTRAINT qrtz_calendars_pk PRIMARY KEY ( calendar_name )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_cron_triggers (
    trigger_name      VARCHAR2(200 BYTE) NOT NULL,
    trigger_group     VARCHAR2(200 BYTE) NOT NULL,
    cron_expression   VARCHAR2(120 BYTE) NOT NULL,
    time_zone_id      VARCHAR2(80 BYTE)
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.qrtz_cron_triggers
    ADD CONSTRAINT qrtz_cron_triggers_pk PRIMARY KEY ( trigger_name,
                                                       trigger_group )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_fired_triggers (
    entry_id            VARCHAR2(95 BYTE) NOT NULL,
    trigger_name        VARCHAR2(200 BYTE) NOT NULL,
    trigger_group       VARCHAR2(200 BYTE) NOT NULL,
    is_volatile         VARCHAR2(1 BYTE) NOT NULL,
    instance_name       VARCHAR2(200 BYTE) NOT NULL,
    fired_time          NUMBER(13) NOT NULL,
    priority            NUMBER(13) NOT NULL,
    state               VARCHAR2(16 BYTE) NOT NULL,
    job_name            VARCHAR2(200 BYTE),
    job_group           VARCHAR2(200 BYTE),
    is_stateful         VARCHAR2(1 BYTE),
    requests_recovery   VARCHAR2(1 BYTE)
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE INDEX extrato.idx_qrtz_ft_job_group ON
    extrato.qrtz_fired_triggers (
        job_group
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_ft_job_name ON
    extrato.qrtz_fired_triggers (
        job_name
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_ft_job_req_recovery ON
    extrato.qrtz_fired_triggers (
        requests_recovery
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_ft_job_stateful ON
    extrato.qrtz_fired_triggers (
        is_stateful
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_ft_trig_group ON
    extrato.qrtz_fired_triggers (
        trigger_group
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_ft_trig_inst_name ON
    extrato.qrtz_fired_triggers (
        instance_name
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_ft_trig_name ON
    extrato.qrtz_fired_triggers (
        trigger_name
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_ft_trig_nm_gp ON
    extrato.qrtz_fired_triggers (
        trigger_name
    ASC,
        trigger_group
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_ft_trig_volatile ON
    extrato.qrtz_fired_triggers (
        is_volatile
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.qrtz_fired_triggers
    ADD CONSTRAINT qrtz_fired_triggers_pk PRIMARY KEY ( entry_id )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_job_details (
    job_name            VARCHAR2(200 BYTE) NOT NULL,
    job_group           VARCHAR2(200 BYTE) NOT NULL,
    description         VARCHAR2(250 BYTE),
    job_class_name      VARCHAR2(250 BYTE) NOT NULL,
    is_durable          VARCHAR2(1 BYTE) NOT NULL,
    is_volatile         VARCHAR2(1 BYTE) NOT NULL,
    is_stateful         VARCHAR2(1 BYTE) NOT NULL,
    requests_recovery   VARCHAR2(1 BYTE) NOT NULL,
    job_data            BLOB
)
TABLESPACE users LOGGING NO INMEMORY
    LOB ( job_data ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

CREATE INDEX extrato.idx_qrtz_j_req_recovery ON
    extrato.qrtz_job_details (
        requests_recovery
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.qrtz_job_details
    ADD CONSTRAINT qrtz_job_details_pk PRIMARY KEY ( job_name,
                                                     job_group )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_job_listeners (
    job_name       VARCHAR2(200 BYTE) NOT NULL,
    job_group      VARCHAR2(200 BYTE) NOT NULL,
    job_listener   VARCHAR2(200 BYTE) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.qrtz_job_listeners
    ADD CONSTRAINT qrtz_job_listeners_pk PRIMARY KEY ( job_name,
                                                       job_group,
                                                       job_listener )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_locks (
    lock_name VARCHAR2(40 BYTE) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.qrtz_locks
    ADD CONSTRAINT qrtz_locks_pk PRIMARY KEY ( lock_name )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_paused_trigger_grps (
    trigger_group VARCHAR2(200 BYTE) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.qrtz_paused_trigger_grps
    ADD CONSTRAINT qrtz_paused_trigger_grps_pk PRIMARY KEY ( trigger_group )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_scheduler_state (
    instance_name       VARCHAR2(200 BYTE) NOT NULL,
    last_checkin_time   NUMBER(13) NOT NULL,
    checkin_interval    NUMBER(13) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.qrtz_scheduler_state
    ADD CONSTRAINT qrtz_scheduler_state_pk PRIMARY KEY ( instance_name )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_simple_triggers (
    trigger_name      VARCHAR2(200 BYTE) NOT NULL,
    trigger_group     VARCHAR2(200 BYTE) NOT NULL,
    repeat_count      NUMBER(7) NOT NULL,
    repeat_interval   NUMBER(12) NOT NULL,
    times_triggered   NUMBER(10) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.qrtz_simple_triggers
    ADD CONSTRAINT qrtz_simple_triggers_pk PRIMARY KEY ( trigger_name,
                                                         trigger_group )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_trigger_listeners (
    trigger_name       VARCHAR2(200 BYTE) NOT NULL,
    trigger_group      VARCHAR2(200 BYTE) NOT NULL,
    trigger_listener   VARCHAR2(200 BYTE) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.qrtz_trigger_listeners
    ADD CONSTRAINT qrtz_trigger_listeners_pk PRIMARY KEY ( trigger_name,
                                                           trigger_group,
                                                           trigger_listener )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.qrtz_triggers (
    trigger_name     VARCHAR2(200 BYTE) NOT NULL,
    trigger_group    VARCHAR2(200 BYTE) NOT NULL,
    job_name         VARCHAR2(200 BYTE) NOT NULL,
    job_group        VARCHAR2(200 BYTE) NOT NULL,
    is_volatile      VARCHAR2(1 BYTE) NOT NULL,
    description      VARCHAR2(250 BYTE),
    next_fire_time   NUMBER(13),
    prev_fire_time   NUMBER(13),
    priority         NUMBER(13),
    trigger_state    VARCHAR2(16 BYTE) NOT NULL,
    trigger_type     VARCHAR2(8 BYTE) NOT NULL,
    start_time       NUMBER(13) NOT NULL,
    end_time         NUMBER(13),
    calendar_name    VARCHAR2(200 BYTE),
    misfire_instr    NUMBER(2),
    job_data         BLOB
)
TABLESPACE users LOGGING NO INMEMORY
    LOB ( job_data ) STORE AS SECUREFILE (
        TABLESPACE users
        STORAGE ( PCTINCREASE 0 MINEXTENTS 1 MAXEXTENTS UNLIMITED FREELISTS 1 BUFFER_POOL DEFAULT )
        CHUNK 8192
        RETENTION
        ENABLE STORAGE IN ROW
        NOCACHE LOGGING
    );

CREATE INDEX extrato.idx_qrtz_t_next_fire_time ON
    extrato.qrtz_triggers (
        next_fire_time
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_t_nft_st ON
    extrato.qrtz_triggers (
        next_fire_time
    ASC,
        trigger_state
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_t_state ON
    extrato.qrtz_triggers (
        trigger_state
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.idx_qrtz_t_volatile ON
    extrato.qrtz_triggers (
        is_volatile
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.qrtz_triggers
    ADD CONSTRAINT qrtz_triggers_pk PRIMARY KEY ( trigger_name,
                                                  trigger_group )
        USING INDEX TABLESPACE users LOGGING;

CREATE TABLE extrato.report_time_limit (
    startdate   TIMESTAMP NOT NULL,
    username    VARCHAR2(40 BYTE) NOT NULL,
    clientid    VARCHAR2(40 BYTE) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE TABLE extrato.tbcl_ext_alt (
    dt_juliana_oper       NUMBER(7),
    cd_sis_orig           VARCHAR2(4 BYTE),
    cd_oper               VARCHAR2(30 BYTE),
    vl_contabil_ext       NUMBER(16, 4),
    vl_corrigido_me_ext   NUMBER(16, 4),
    quantidade_ext        NUMBER(20, 8),
    cd_seq_ext_alt        NUMBER(4) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE INDEX extrato.cl_ext_alt_inx_01 ON
    extrato.tbcl_ext_alt (
        dt_juliana_oper
    ASC,
        cd_sis_orig
    ASC,
        cd_oper
    ASC )
        TABLESPACE users LOGGING;

CREATE UNIQUE INDEX extrato.cl_ext_alt_pk ON
    extrato.tbcl_ext_alt (
        cd_seq_ext_alt
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.tbcl_ext_alt
    ADD CONSTRAINT cl_ext_alt_pk PRIMARY KEY ( cd_seq_ext_alt )
        USING INDEX extrato.cl_ext_alt_pk;

CREATE TABLE extrato.tbcl_ext_exc (
    cd_cli_br             NUMBER(8),
    ds_obn                VARCHAR2(50 BYTE),
    cd_moeda_oper         NUMBER(5),
    cd_empresa_fin        NUMBER(6),
    cd_oper               VARCHAR2(30 BYTE),
    cd_sis_orig           VARCHAR2(4 BYTE),
    dt_limite             DATE,
    dt_limite_ini         DATE,
    cd_seq_ext_exc        NUMBER(5) NOT NULL,
    cd_empresa            NUMBER(6),
    cd_grprod             NUMBER(3),
    cd_famprod            NUMBER(2),
    cd_produto            NUMBER(4),
    cd_modalidade         NUMBER(3),
    ii_tipo_contabil      CHAR(1 BYTE),
    ii_tipo_contraparte   CHAR(1 BYTE),
    cd_garantia           VARCHAR2(2 BYTE)
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.tbcl_ext_exc
    ADD CONSTRAINT avcon_42207_ii_ti_000 CHECK ( ii_tipo_contabil IN (
        'A',
        'C',
        'P'
    ) );

ALTER TABLE extrato.tbcl_ext_exc
    ADD CONSTRAINT avcon_42207_ii_ti_001 CHECK ( ii_tipo_contraparte IN (
        'B',
        'E',
        'F',
        'G',
        'N'
    ) );

CREATE UNIQUE INDEX extrato.tee_pk ON
    extrato.tbcl_ext_exc (
        cd_seq_ext_exc
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.tbcl_ext_exc
    ADD CONSTRAINT tee_pk PRIMARY KEY ( cd_seq_ext_exc )
        USING INDEX extrato.tee_pk;

CREATE TABLE extrato.tbcl_parametro_ext (
    seq_parametro   NUMBER(3) NOT NULL,
    cd_modalidade   NUMBER(3),
    cd_sis_orig     CHAR(4 BYTE),
    qt_casa_dec     NUMBER(2),
    id_d_trro       VARCHAR2(4 BYTE),
    id_dd_trro      VARCHAR2(4 BYTE),
    id_d_camd       VARCHAR2(4 BYTE),
    id_dd_camd      VARCHAR2(4 BYTE),
    id_d_caex       VARCHAR2(4 BYTE),
    id_dd_caex      VARCHAR2(4 BYTE),
    id_d_snop       VARCHAR2(4 BYTE),
    id_dd_snop      VARCHAR2(4 BYTE),
    cd_produto      NUMBER(4),
    cd_moeda_oper   NUMBER(5)
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE INDEX extrato.pext_modalidade_fk_i ON
    extrato.tbcl_parametro_ext (
        cd_modalidade
    ASC )
        TABLESPACE users LOGGING;

CREATE UNIQUE INDEX extrato.pext_pk ON
    extrato.tbcl_parametro_ext (
        seq_parametro
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.tbcl_parametro_ext
    ADD CONSTRAINT pext_pk PRIMARY KEY ( seq_parametro )
        USING INDEX extrato.pext_pk;

CREATE TABLE extrato.tbex_atr_extr (
    cd_extrato        NUMBER(3) NOT NULL,
    cd_atributo       NUMBER(4) NOT NULL,
    tp_mask           VARCHAR2(50 BYTE),
    id_d_posreport    VARCHAR2(4 BYTE) NOT NULL,
    id_dd_posreport   VARCHAR2(4 BYTE) NOT NULL,
    nr_linha          NUMBER(3),
    nr_coluna         NUMBER(3),
    nr_seq            NUMBER(2),
    cd_func           VARCHAR2(30 BYTE),
    cd_align          VARCHAR2(1 BYTE),
    ft_name           VARCHAR2(30 BYTE),
    ft_size           NUMBER(2),
    ft_bold           NUMBER(1),
    ft_italic         NUMBER(1),
    ft_subscript      NUMBER(1),
    ft_color          VARCHAR2(20 BYTE)
)
TABLESPACE tbs16k01d LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.tbex_atr_e_pk ON
    extrato.tbex_atr_extr (
        cd_extrato
    ASC,
        cd_atributo
    ASC )
        TABLESPACE tbs16k01i NOLOGGING;

ALTER TABLE extrato.tbex_atr_extr
    ADD CONSTRAINT tbex_atr_e_pk PRIMARY KEY ( cd_extrato,
                                               cd_atributo )
        USING INDEX extrato.tbex_atr_e_pk;

CREATE TABLE extrato.tbex_atributo (
    cd_atributo   NUMBER(4) NOT NULL,
    ds_atributo   VARCHAR2(50 BYTE) NOT NULL
)
TABLESPACE tbs16k01d LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.tbex_atrib_pk ON
    extrato.tbex_atributo (
        cd_atributo
    ASC )
        TABLESPACE tbs16k01i NOLOGGING;

ALTER TABLE extrato.tbex_atributo
    ADD CONSTRAINT tbex_atrib_pk PRIMARY KEY ( cd_atributo )
        USING INDEX extrato.tbex_atrib_pk;

CREATE TABLE extrato.tbex_extratos (
    cd_extrato          NUMBER(3) NOT NULL,
    dt_extrato          DATE NOT NULL,
    cd_cli_br           NUMBER(8) NOT NULL,
    cd_atributo         NUMBER(4) NOT NULL,
    nr_linha_extrato    NUMBER(3) NOT NULL,
    nr_coluna_extrato   NUMBER(3),
    ds_atributo         VARCHAR2(255 BYTE)
)
TABLESPACE tbs16k01d LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.tbex_extra_pk ON
    extrato.tbex_extratos (
        cd_extrato
    ASC,
        dt_extrato
    ASC,
        cd_cli_br
    ASC,
        cd_atributo
    ASC,
        nr_linha_extrato
    ASC )
        TABLESPACE tbs16k01i NOLOGGING;

ALTER TABLE extrato.tbex_extratos
    ADD CONSTRAINT tbex_extra_pk PRIMARY KEY ( cd_extrato,
                                               dt_extrato,
                                               cd_cli_br,
                                               cd_atributo,
                                               nr_linha_extrato )
        USING INDEX extrato.tbex_extra_pk;

CREATE TABLE extrato.tbex_tipo_extrato (
    cd_extrato    NUMBER(3) NOT NULL,
    ds_extrato    VARCHAR2(50 BYTE) NOT NULL,
    dt_inicio     DATE NOT NULL,
    dt_final      DATE NOT NULL,
    nm_template   VARCHAR2(50 BYTE) NOT NULL,
    nm_owner      VARCHAR2(30 BYTE) NOT NULL,
    vl_limite     NUMBER(16, 4)
)
TABLESPACE tbs16k01d LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.tbex_tp_ex_pk ON
    extrato.tbex_tipo_extrato (
        cd_extrato
    ASC )
        TABLESPACE tbs16k01i NOLOGGING;

ALTER TABLE extrato.tbex_tipo_extrato
    ADD CONSTRAINT tbex_tp_ex_pk PRIMARY KEY ( cd_extrato )
        USING INDEX extrato.tbex_tp_ex_pk;

CREATE TABLE extrato.tbl_mod_aplic (
    cd_aplic            NUMBER(3),
    cd_modalidade       NUMBER(3),
    ds_negocio          VARCHAR2(60 BYTE),
    ds_negocio_ingles   VARCHAR2(60 BYTE),
    display_qtde        CHAR(1 BYTE),
    display_me          CHAR(1 BYTE),
    display_mn          CHAR(1 BYTE),
    ii_tipo_contabil    CHAR(1 BYTE),
    ds_obn              VARCHAR2(50 BYTE),
    cd_sis_orig         VARCHAR2(4 BYTE),
    cg_sistema          VARCHAR2(2 BYTE),
    cg_modulo           VARCHAR2(2 BYTE),
    nm_indexador        VARCHAR2(35 BYTE),
    cd_garantia         VARCHAR2(5 BYTE),
    cd_seq_mod_aplic    NUMBER(4) NOT NULL
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE INDEX extrato.mod_aplic_inx_01 ON
    extrato.tbl_mod_aplic (
        cd_aplic
    ASC,
        cd_modalidade
    ASC,
        ds_obn
    ASC )
        TABLESPACE users LOGGING;

CREATE UNIQUE INDEX extrato.tbl_mod_aplic_primary_key ON
    extrato.tbl_mod_aplic (
        cd_seq_mod_aplic
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.tbl_mod_aplic
    ADD CONSTRAINT tbl_mod_aplic_primary_key PRIMARY KEY ( cd_seq_mod_aplic )
        USING INDEX extrato.tbl_mod_aplic_primary_key;

CREATE TABLE extrato.tbmd_extr (
    dt_juliana_oper          NUMBER(7) NOT NULL,
    cd_sis_orig              CHAR(4 BYTE) NOT NULL,
    cd_oper                  VARCHAR2(30 BYTE) NOT NULL,
    cd_contrato              VARCHAR2(30 BYTE),
    cd_empresa               NUMBER(6),
    cd_seq_obn               NUMBER(7),
    cd_indexador             NUMBER(3),
    cd_moeda_oper            NUMBER(5),
    cd_cli_br                NUMBER(8),
    dt_negociacao_oper       DATE,
    dt_inc_operacao          DATE,
    dt_lqd_ida_oper          DATE,
    dt_vencimento_oper       DATE,
    dt_lqd_volta_oper        DATE,
    ii_tipo_contabil         CHAR(1 BYTE),
    vl_contabil              NUMBER(16, 4),
    vl_princ_fin             NUMBER(16, 4),
    vl_princ_oper            NUMBER(16, 4),
    vl_princ_empr            NUMBER(16, 4),
    vl_saldo_dev_prin_fin    NUMBER(16, 4),
    vl_saldo_dev_prin_oper   NUMBER(16, 4),
    vl_saldo_dev_jur_fin     NUMBER(16, 4),
    vl_saldo_dev_jur_oper    NUMBER(16, 4),
    pc_taxa_oper             NUMBER(14, 8),
    pc_indexador_oper        NUMBER(7, 4),
    qt_total_oper            NUMBER(20, 8),
    vl_saldo_dev_prin_emp    NUMBER(16, 4),
    vl_saldo_dev_jur_emp     NUMBER(16, 4),
    vl_ope_emp_ext           NUMBER(16, 4),
    vl_ope_me_ext            NUMBER(16, 4),
    vl_ope_mn_ext            NUMBER(16, 4),
    vl_juros_me_ext          NUMBER(16, 4),
    vl_juros_mn_ext          NUMBER(16, 4),
    vl_contabil_ext          NUMBER(16, 4),
    vl_corrigido_me_ext      NUMBER(16, 4),
    quantidade_ext           NUMBER(20, 8),
    ii_tipo_contraparte      CHAR(1 BYTE),
    cd_filial                NUMBER(2),
    cd_garantia              VARCHAR2(2 BYTE),
    cod_modalidade           NUMBER(3),
    cod_produto              NUMBER(3)
)
TABLESPACE users LOGGING NO INMEMORY;

ALTER TABLE extrato.tbmd_extr
    ADD CONSTRAINT avcon_41871_ii_ti_001 CHECK ( ii_tipo_contabil IN (
        'A',
        'C',
        'P'
    ) );

CREATE BITMAP INDEX extrato.extr_emp_fk_i ON
    extrato.tbmd_extr (
        cd_empresa
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.extr_ix_01 ON
    extrato.tbmd_extr (
        cd_cli_br
    ASC,
        dt_juliana_oper
    ASC,
        cd_sis_orig
    ASC )
        TABLESPACE users LOGGING;

CREATE INDEX extrato.extr_ix_02 ON
    extrato.tbmd_extr (
        cd_sis_orig
    ASC,
        cd_oper
    ASC )
        TABLESPACE users LOGGING;

CREATE BITMAP INDEX extrato.extr_per_fk_i ON
    extrato.tbmd_extr (
        dt_juliana_oper
    ASC )
        TABLESPACE users LOGGING;

CREATE UNIQUE INDEX extrato.extr_pk ON
    extrato.tbmd_extr (
        dt_juliana_oper
    ASC,
        cd_sis_orig
    ASC,
        cd_oper
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.tbmd_extr
    ADD CONSTRAINT extr_pk PRIMARY KEY ( dt_juliana_oper,
                                         cd_sis_orig,
                                         cd_oper )
        USING INDEX extrato.extr_pk;

CREATE TABLE extrato.tex_extrato (
    cd_empresa           NUMBER(6) NOT NULL,
    cd_cliente           NUMBER(7) NOT NULL,
    cd_modalidade        NUMBER(3) NOT NULL,
    cd_oper_origem       VARCHAR2(30 BYTE) NOT NULL,
    cd_contrato          VARCHAR2(30 BYTE),
    dt_referencia        DATE,
    dt_inicio_oper       DATE,
    dt_vencimento_oper   DATE,
    dt_liquidacao_oper   DATE,
    cd_grprod            NUMBER(3),
    cd_famprod           NUMBER(3),
    cd_produto           NUMBER(4),
    sg_sistema           VARCHAR2(2 BYTE),
    sg_modulo            VARCHAR2(2 BYTE),
    cd_moeda             NUMBER(5),
    quantidade           NUMBER(20, 8),
    vl_contabil          NUMBER(16, 4),
    vl_corrigido_me      NUMBER(16, 4),
    vl_operacao_me       NUMBER(16, 4),
    vl_operacao_mn       NUMBER(16, 4),
    vl_operacao_emp      NUMBER(16, 4),
    vl_juros_me          NUMBER(16, 4),
    vl_juros_mn          NUMBER(16, 4),
    ii_tipo_contabil     VARCHAR2(1 BYTE),
    cd_cgccpf            VARCHAR2(30 BYTE),
    nm_cliente           VARCHAR2(100 BYTE),
    dc_end1              VARCHAR2(100 BYTE),
    dc_end2              VARCHAR2(100 BYTE),
    dc_end3              VARCHAR2(100 BYTE),
    cd_pais              NUMBER(5),
    nome_aoscuidados     VARCHAR2(35 BYTE),
    ds_obn               VARCHAR2(50 BYTE),
    nm_empresa           VARCHAR2(64 BYTE),
    cd_filial            NUMBER(2),
    nm_indexador         VARCHAR2(35 BYTE),
    cd_garantia          VARCHAR2(5 BYTE)
)
TABLESPACE users LOGGING NO INMEMORY;

CREATE UNIQUE INDEX extrato.tex_ext_pk ON
    extrato.tex_extrato (
        cd_empresa
    ASC,
        cd_cliente
    ASC,
        cd_modalidade
    ASC,
        cd_oper_origem
    ASC )
        TABLESPACE users LOGGING;

ALTER TABLE extrato.tex_extrato
    ADD CONSTRAINT tex_ext_pk PRIMARY KEY ( cd_empresa,
                                            cd_cliente,
                                            cd_modalidade,
                                            cd_oper_origem )
        USING INDEX extrato.tex_ext_pk;

ALTER TABLE extrato.qrtz_job_listeners
    ADD FOREIGN KEY ( job_name,
                      job_group )
        REFERENCES extrato.qrtz_job_details ( job_name,
                                              job_group )
    NOT DEFERRABLE NOVALIDATE;

ALTER TABLE extrato.qrtz_blob_triggers
    ADD FOREIGN KEY ( trigger_name,
                      trigger_group )
        REFERENCES extrato.qrtz_triggers ( trigger_name,
                                           trigger_group )
    NOT DEFERRABLE NOVALIDATE;

ALTER TABLE extrato.qrtz_trigger_listeners
    ADD FOREIGN KEY ( trigger_name,
                      trigger_group )
        REFERENCES extrato.qrtz_triggers ( trigger_name,
                                           trigger_group )
    NOT DEFERRABLE NOVALIDATE;

ALTER TABLE extrato.qrtz_triggers
    ADD FOREIGN KEY ( job_name,
                      job_group )
        REFERENCES extrato.qrtz_job_details ( job_name,
                                              job_group )
    NOT DEFERRABLE NOVALIDATE;

ALTER TABLE extrato.qrtz_simple_triggers
    ADD FOREIGN KEY ( trigger_name,
                      trigger_group )
        REFERENCES extrato.qrtz_triggers ( trigger_name,
                                           trigger_group )
    NOT DEFERRABLE NOVALIDATE;

ALTER TABLE extrato.qrtz_cron_triggers
    ADD FOREIGN KEY ( trigger_name,
                      trigger_group )
        REFERENCES extrato.qrtz_triggers ( trigger_name,
                                           trigger_group )
    NOT DEFERRABLE NOVALIDATE;

CREATE OR REPLACE TRIGGER EXTRATO.AUT_EXT_TBCL_EXT_ALT_ADDTRGR 
    BEFORE INSERT ON EXTRATO.AUT_EXT_TBCL_EXT_ALT 
    FOR EACH ROW 
BEGIN
	SELECT EXTRATO.SEQ_AUT_EXT_TBCL_EXT_ALT.NEXTVAL INTO :NEW.AUT_CD_SEQUENCIAL FROM DUAL;
END; 
/

CREATE OR REPLACE TRIGGER EXTRATO.AUT_EXT_TBCL_EXT_EXC_ADDTRGR 
    BEFORE INSERT ON EXTRATO.AUT_EXT_TBCL_EXT_EXC 
    FOR EACH ROW 
BEGIN
    SELECT EXTRATO.SEQ_AUT_EXT_TBCL_EXT_EXC.NEXTVAL INTO :NEW.AUT_CD_SEQUENCIAL FROM DUAL;
END; 
/

CREATE OR REPLACE TRIGGER EXTRATO.AUT_EXT_TEX_EXTRATO_ADDTRGR 
    BEFORE INSERT ON EXTRATO.AUT_EXT_TEX_EXTRATO 
    FOR EACH ROW 
BEGIN
    SELECT EXTRATO.SEQ_AUT_EXT_TEX_EXTRATO.NEXTVAL INTO :NEW.AUT_CD_SEQUENCIAL FROM DUAL;
END; 
/

CREATE OR REPLACE TRIGGER EXTRATO.TBCL_EXT_ALT_ADD_TRIGGER 
    BEFORE INSERT ON EXTRATO.TBCL_EXT_ALT 
    FOR EACH ROW 
BEGIN
    SELECT EXTRATO.SEQ_TBCL_EXT_ALT.NEXTVAL INTO :NEW.CD_SEQ_EXT_ALT FROM DUAL;
END; 
/

CREATE OR REPLACE TRIGGER EXTRATO.TBCL_EXT_EXC_ADDTRGR 
    BEFORE INSERT ON EXTRATO.TBCL_EXT_EXC 
    FOR EACH ROW 
BEGIN
    SELECT EXTRATO.SEQ_TBCL_EXT_EXC.NEXTVAL INTO :NEW.CD_SEQ_EXT_EXC FROM DUAL;
END; 
/

CREATE OR REPLACE TRIGGER EXTRATO.TBCL_PARAMETRO_EXT_ADD_TRIGGER 
    BEFORE INSERT ON EXTRATO.TBCL_PARAMETRO_EXT 
    FOR EACH ROW 
BEGIN
    SELECT EXTRATO.SEQ_TBCL_PARAMETRO_EXT.NEXTVAL INTO :NEW.SEQ_PARAMETRO FROM DUAL;
END; 
/

CREATE OR REPLACE TRIGGER EXTRATO.TBL_MOD_APLIC_ADD_TRIGGER 
    BEFORE INSERT ON EXTRATO.TBL_MOD_APLIC 
    FOR EACH ROW 
BEGIN
    SELECT EXTRATO.SEQ_TBL_MOD_APLIC.NEXTVAL INTO :NEW.CD_SEQ_MOD_APLIC FROM DUAL;
END; 
/



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            36
-- CREATE INDEX                            42
-- ALTER TABLE                             42
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           7
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        2
-- CREATE USER                              1
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 2
